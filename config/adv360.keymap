#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        l_paren_nine: l_paren_nine {
            compatible = "zmk,behavior-mod-morph";
            label = "L_PAREN_NINE";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp KP_N9>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        r_paren_zero: r_paren_zero {
            compatible = "zmk,behavior-mod-morph";
            label = "R_PAREN_ZERO";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp KP_N0>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        under_minus: under_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDER_MINUS";
            bindings = <&kp UNDERSCORE>, <&kp KP_MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        v_lbrace: v_lbrace {
            compatible = "zmk,behavior-mod-morph";
            label = "V_LBRACE";
            bindings = <&kp V>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT)>;
        };

        b_rbrace: b_rbrace {
            compatible = "zmk,behavior-mod-morph";
            label = "B_RBRACE";
            bindings = <&kp B>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI)>;
        };

        j_equals: j_equals {
            compatible = "zmk,behavior-mod-morph";
            label = "J_EQUALS";
            bindings = <&kp J>, <&kp KP_EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        u_greaterthan: u_greaterthan {
            compatible = "zmk,behavior-mod-morph";
            label = "U_GREATERTHAN";
            bindings = <&kp U>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        k_lessthan: k_lessthan {
            compatible = "zmk,behavior-mod-morph";
            label = "K_LESSTHAN";
            bindings = <&kp K>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        c-f-plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <24 34>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-f-minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <25 34>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-f-underscore {
            bindings = <&kp KP_MINUS>;
            key-positions = <40 34>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-f-comma {
            bindings = <&kp KP_COMMA>;
            key-positions = <54 34>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-f-dot {
            bindings = <&kp KP_DOT>;
            key-positions = <55 34>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-f-divide {
            bindings = <&kp KP_DIVIDE>;
            key-positions = <22 34>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-j-lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 39>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-j-rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 39>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-j-lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <31 39>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-j-rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <32 39>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-j-lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <50 39>;
            timeout-ms = <500>;
            layers = <0>;
        };

        c-j-rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <51 39>;
            timeout-ms = <500>;
            layers = <0>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5     &tog 1                                                                                  &mo 3                                  &kp N6  &kp N7          &kp N8       &l_paren_nine  &r_paren_zero  &under_minus
&kp DEL    &kp Q      &kp W     &kp E     &kp R      &kp T      &kt RG(RC(LEFT_SHIFT))                                                                  &kt LG(LC(LEFT_SHIFT))                 &kp Y   &u_greaterthan  &kp I        &kp O          &kp P          &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G      &mt RG(RC(RIGHT_ALT)) RG(RC(RIGHT_ALT))  &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &mt LG(LC(LEFT_ALT)) LG(LC(LEFT_ALT))  &kp H   &j_equals       &k_lessthan  &kp L          &kp SEMICOLON  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &v_lbrace  &b_rbrace                                                      &kp HOME      &kp PG_UP                                                    &kp N   &kp M           &kp COMMA    &kp DOT        &kp FSLH       &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT             &kp BSPC                                 &kp TAB    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE                                      &kp UP          &kp DOWN     &kp LBKT       &kp RBKT       &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
